plugins {
    id 'com.android.application'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-parcelize'
apply plugin: "androidx.navigation.safeargs"


android {
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.rmsr.myguard"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 12
        versionName "2.0.8"

        manifestPlaceholders = [appLabel: "MyGuard"]
        multiDexEnabled true


//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.rmsr.myguard.HiltTestRunner"
        // room export schema
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildFeatures {
        dataBinding false
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.0"
    }

    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    signingConfigs {
        release {
            storeFile new File(localProperties.getProperty('storeFile').replace('"', ''))
            storePassword localProperties.getProperty('storePassword').replace('"', '')
            keyAlias localProperties.getProperty('keyAlias').replace('"', '')
            keyPassword localProperties.getProperty('keyPassword').replace('"', '')
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

        }

        debug {
            applicationIdSuffix = ".debug"
            manifestPlaceholders = [appLabel: "Debug MyGuard"]


            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "backendAuthState"
    productFlavors {

        auth {
            dimension "backendAuthState"

        }

        noAuth {
            dimension "backendAuthState"
            versionNameSuffix = "-NO_AUTH"

            buildConfigField 'String', "HIBP_AUTH", localProperties['hibpAuth']
            buildConfigField 'String', "HIBP_PINS", localProperties['pins']

        }
    }

    variantFilter { variant ->
        def buildType = variant.buildType.name
        def names = variant.flavors*.name

        if (buildType == "release" && names.contains("noAuth"))
            setIgnore(true)
    }

    compileOptions {
        //to support java 8 apis on old devices
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
//        useIR = true
    }

    //this section is for testing with espresso core 3.4.0, can be deleted and downgrade to 3.3.0
    configurations.all {
        resolutionStrategy {
            force 'androidx.test:monitor:1.4.0'
            //late add cause other error
            exclude module: "kotlinx-coroutines-debug"
        }
    }
}

dependencies {
    //to support java 8 apis on old devices
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.6'

    implementation 'androidx.fragment:fragment-ktx:1.5.1'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


// Compose
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.foundation:foundation:$composeVersion"
    implementation "androidx.compose.foundation:foundation-layout:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    implementation "androidx.compose.compiler:compiler:1.3.0"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.runtime:runtime:$composeVersion"
    //to use our app theme as MDC
    implementation 'com.google.android.material:compose-theme-adapter:1.1.15'

    implementation "androidx.compose.ui:ui-viewbinding:$composeVersion"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$composeVersion"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "androidx.compose.runtime:runtime-rxjava3:$composeVersion"
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.5.1'
    // Compose Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"

    // Local unit tests
    testImplementation "androidx.test:core:1.4.0"
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    testImplementation 'io.mockk:mockk:1.12.5'
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation 'org.robolectric:robolectric:4.8.1'


    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.4.0'
    // Instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$composeVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'org.assertj:assertj-core:3.23.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.9.1"
    androidTestImplementation 'io.mockk:mockk-android:1.12.5'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    debugImplementation 'androidx.fragment:fragment-testing:1.5.1'

//Splash screen Api
    implementation 'androidx.core:core-splashscreen:1.0.0'

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    //hilt helper
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'   //navigation
    //support work manager
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'     //work manager


    //Retrofit

    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    //Gson converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //RxJava3 converter
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"
    //for text converter
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    //Room
    def room_version = '2.4.3'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //Gson
    implementation 'com.google.code.gson:gson:2.9.1'


    //Rx java 3
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'


    def lifecycle_version = '2.5.1'
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycle scope
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
// optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"



    // Navigation implementation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    //2.3.5 updated to handle button reclicked
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"         //2.3.5
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //intuit lib for Screen sizes handling
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'

    implementation 'androidx.core:core-ktx:1.8.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'

    //Work Manger
    def work_version = '2.7.1'
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - RxJava3 support
    implementation "androidx.work:work-rxjava3:$work_version"
    // Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    //Android preferences
    implementation "androidx.preference:preference-ktx:1.2.0"



    //leak canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'


    def coroutines_version = '1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx3:$coroutines_version"


    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:30.3.2')
    // Declare the dependency for the Firebase Authentication library
    implementation('com.google.firebase:firebase-auth-ktx') {
        exclude module: "play-services-safetynet"
    }
    // Declare the dependency for the Cloud Firestore library
    implementation 'com.google.firebase:firebase-firestore-ktx'
    // Declare the dependency for the App Check library
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    debugImplementation 'com.google.firebase:firebase-appcheck-debug:16.0.0'

}
repositories {
    mavenCentral()
}